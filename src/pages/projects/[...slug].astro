---
import { type CollectionEntry, getEntry } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrev from "@components/BackToPrev.astro";
import Link from "@components/Link.astro";

const { slug } = Astro.params;
if (typeof slug !== 'string') {
  throw new Error('Slug must be a string');
}

const entry = await getEntry('projects', slug);

if (!entry) {
  return Astro.redirect('/404');
}

const { Content } = await entry.render();

type Props = CollectionEntry<"projects">;
---

<PageLayout title={entry.data.title} description={entry.data.description}>
  <Container>
    <div class="animate">
      <BackToPrev href="/projects">
        Back to projects
      </BackToPrev>
    </div>
    <div class="space-y-1 my-10">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={entry.data.date} />
        </div>
        &bull;
        <div class="font-base text-sm">
          {readingTime(entry.body)}
        </div>
      </div>
      <div class="animate text-2xl font-semibold text-black dark:text-white">
        {entry.data.title}
      </div>
      {(entry.data.demoURL || entry.data.repoURL) && (
        <nav class="animate flex gap-1">
          {entry.data.demoURL && (
            <Link href={entry.data.demoURL} external>
              demo
            </Link>
          )}
          {entry.data.demoURL && entry.data.repoURL && (
            <span>/</span>
          )}
          {entry.data.repoURL && (
            <Link href={entry.data.repoURL} external>
              repo
            </Link>
          )}
        </nav>
      )}
    </div>
    <article class="animate">
      <Content />
    </article>
  </Container>
</PageLayout>
